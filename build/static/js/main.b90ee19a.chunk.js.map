{"version":3,"sources":["JsonApi/UpdateModal.js","JsonApi/UsersDetail.js","JsonApi/AddUser.js","JsonApi/App.js","JsonApi/reducers/userReducer.js","index.js"],"names":["schema","Joi","object","name","string","required","min","trim","username","email","tlds","allow","address","city","UpdateModal","props","dispatch","useDispatch","open","setOpen","curId","setCurId","val","useForm","resolver","joiResolver","handleSubmit","control","setValue","errors","reset","formState","useEffect","Modal","closeIcon","onClose","onOpen","size","Header","content","Content","Form","Field","render","field","onChange","value","Input","type","fluid","placeholder","e","target","error","message","Actions","Button","color","onClick","Icon","data","updatedValue","UsersDetail","users","useSelector","state","useState","Table","padded","striped","Row","HeaderCell","Body","map","index","Cell","id","showModal","to","AddUser","minDomainSegments","history","useHistory","onSubmit","push","console","log","style","padding","autoComplete","primary","negative","App","a","axios","get","result","loadUser","path","userReducer","action","filter","temp","splice","store","createStore","userReducers","window","__REDUX_DEVTOOLS_EXTENSION__","ReactDOM","document","getElementById"],"mappings":"oUAOMA,EAASC,IAAIC,OAAO,CACxBC,KAAMF,IAAIG,SAASC,WAAWC,IAAI,GAAGC,OACrCC,SAAUP,IAAIG,SAASE,IAAI,GAAGD,WAC9BI,MAAOR,IAAIG,SACRK,MAAM,CAAEC,KAAM,CAAEC,OAAO,KACvBN,WACHO,QAASX,IAAIC,OAAO,CAClBW,KAAMZ,IAAIG,SAASC,eAmKRS,EA/JK,SAACC,GAEnB,IAAMC,EAAWC,cACTC,EAAuCH,EAAvCG,KAAMC,EAAiCJ,EAAjCI,QAASC,EAAwBL,EAAxBK,MAAOC,EAAiBN,EAAjBM,SAAUC,EAAOP,EAAPO,IAHX,EAUzBC,YAAQ,CAAEC,SAAUC,YAAYzB,KALlC0B,EAL2B,EAK3BA,aACAC,EAN2B,EAM3BA,QACAC,EAP2B,EAO3BA,SAEaC,GATc,EAQ3BC,MAR2B,EAS3BC,UAAaF,QAGjBG,qBAAU,WACVJ,EAAS,OAAON,EAAInB,MACpByB,EAAS,WAAWN,EAAId,UACxBoB,EAAS,QAAQN,EAAIb,OACrBmB,EAAS,eAAeN,EAAIV,QAAQC,QAEjC,IA2BD,OACE,eAACoB,EAAA,EAAD,CACEC,WAAS,EACTC,QAAS,kBAAMhB,GAAQ,IACvBiB,OAAQ,kBAAMjB,GAAQ,IACtBD,KAAMA,EACNmB,KAAK,QALP,UAOE,cAACC,EAAA,EAAD,CAAQC,QAAQ,gBAChB,cAACN,EAAA,EAAMO,QAAP,UACE,eAACC,EAAA,EAAKC,MAAN,WACE,2CACA,cAAC,IAAD,CACEvC,KAAK,OACLwB,QAASA,EACTgB,OAAQ,oBAAGC,MAASC,EAAZ,EAAYA,SAAUC,EAAtB,EAAsBA,MAAtB,OACN,cAACL,EAAA,EAAKM,MAAN,CACEC,KAAK,OACLC,OAAK,EACLH,MAAOA,EACPI,YAAY,cACZL,SAAU,SAACM,GAAD,OAAON,EAASM,EAAEC,OAAON,QACnCO,MACExB,EAAO1B,MAAQ,CACboC,QAASV,EAAO1B,KAAKmD,mBAQnC,cAACrB,EAAA,EAAMO,QAAP,UACE,eAACC,EAAA,EAAKC,MAAN,WACE,8CACA,cAAC,IAAD,CACEvC,KAAK,WACLwB,QAASA,EACTgB,OAAQ,oBAAGC,MAASC,EAAZ,EAAYA,SAAUC,EAAtB,EAAsBA,MAAtB,OACN,cAACL,EAAA,EAAKM,MAAN,CACEC,KAAK,OACLC,OAAK,EACLH,MAAOA,EACP3C,KAAK,WACL+C,YAAY,kBACZL,SAAU,SAACM,GAAD,OAAON,EAASM,EAAEC,OAAON,QACnCO,MACExB,EAAOrB,UAAY,CACjB+B,QAASV,EAAOrB,SAAS8C,mBAQvC,cAACrB,EAAA,EAAMO,QAAP,UACE,eAACC,EAAA,EAAKC,MAAN,WACE,0CACA,cAAC,IAAD,CACEvC,KAAK,QACLwB,QAASA,EACTgB,OAAQ,oBAAGC,MAASC,EAAZ,EAAYA,SAAUC,EAAtB,EAAsBA,MAAtB,OACN,cAACL,EAAA,EAAKM,MAAN,CACEE,OAAK,EACLD,KAAK,OACLF,MAAOA,EACPI,YAAY,eACZL,SAAU,SAACM,GAAD,OAAON,EAASM,EAAEC,OAAON,QACnCO,MACExB,EAAOpB,OAAS,CACd8B,QAASV,EAAOpB,MAAM6C,mBAQpC,cAACrB,EAAA,EAAMO,QAAP,UACE,eAACC,EAAA,EAAKC,MAAN,WACE,yCACA,cAAC,IAAD,CACEvC,KAAK,eACLwB,QAASA,EACTgB,OAAQ,wBAAGC,MAASC,EAAZ,EAAYA,SAAUC,EAAtB,EAAsBA,MAAtB,OACN,cAACL,EAAA,EAAKM,MAAN,CACEC,KAAK,OACLC,OAAK,EACLH,MAAOA,EACPI,YAAY,eACZL,SAAU,SAACM,GAAD,OAAON,EAASM,EAAEC,OAAON,QACnCO,OACQ,OAANxB,QAAM,IAANA,GAAA,UAAAA,EAAQjB,eAAR,eAAiBC,OAAQ,CACvB0B,QAAO,OAAEV,QAAF,IAAEA,GAAF,UAAEA,EAAQjB,eAAV,aAAE,EAAiBC,KAAKyC,mBAQ7C,eAACrB,EAAA,EAAMsB,QAAP,WACE,eAACC,EAAA,EAAD,CAAQC,MAAM,MAAMC,QA5GL,WACnBrC,EAAS,MACTF,GAAQ,IA0GJ,UACE,cAACwC,EAAA,EAAD,CAAMxD,KAAK,WADb,aAGA,eAACqD,EAAA,EAAD,CAAQC,MAAM,QAAQC,QAAShC,GApIhB,SAACkC,GAAU,IAE5BzD,EAIEyD,EAJFzD,KACAK,EAGEoD,EAHFpD,SACAC,EAEEmD,EAFFnD,MACWI,EACT+C,EADFhD,QAAWC,KAUbG,EAAS,CAAEgC,KAAM,cAAea,aAPX,CACnB1D,KAAMA,EACNK,SAAUA,EACVC,MAAOA,EACPG,QAAS,CAAEC,SAGiCO,UAC9CC,EAAS,MACTF,GAAQ,MAmHJ,UACE,cAACwC,EAAA,EAAD,CAAMxD,KAAK,cADb,oBCvFO2D,EA5EK,WAClB,IAAM9C,EAAWC,cACX8C,EAAQC,aAAY,SAACC,GAAD,OAAWA,KAFb,EAGAC,oBAAS,GAHT,mBAGjBhD,EAHiB,KAGXC,EAHW,OAIE+C,mBAAS,MAJX,mBAIjB9C,EAJiB,KAIVC,EAJU,KAoBxB,OACE,eAAC8C,EAAA,EAAD,CAAOC,QAAM,EAACC,SAAO,EAArB,UACE,cAACF,EAAA,EAAM7B,OAAP,UACE,eAAC6B,EAAA,EAAMG,IAAP,WACE,cAACH,EAAA,EAAMI,WAAP,iBACA,cAACJ,EAAA,EAAMI,WAAP,mBACA,cAACJ,EAAA,EAAMI,WAAP,wBACA,cAACJ,EAAA,EAAMI,WAAP,qBACA,cAACJ,EAAA,EAAMI,WAAP,mBACA,cAACJ,EAAA,EAAMI,WAAP,0BAIJ,cAACJ,EAAA,EAAMK,KAAP,UACGT,EAAMU,KAAI,SAACnD,EAAKoD,GAAN,OACT,qCACE,eAACP,EAAA,EAAMG,IAAP,WACE,cAACH,EAAA,EAAMQ,KAAP,UAAcrD,EAAIsD,GAAKF,EAAQ,IAC/B,cAACP,EAAA,EAAMQ,KAAP,UAAarD,EAAInB,OACjB,cAACgE,EAAA,EAAMQ,KAAP,UAAarD,EAAId,WACjB,cAAC2D,EAAA,EAAMQ,KAAP,UAAarD,EAAIb,QACjB,cAAC0D,EAAA,EAAMQ,KAAP,UAAarD,EAAIV,QAAQC,OACzB,eAACsD,EAAA,EAAMQ,KAAP,WACG,IACD,cAACnB,EAAA,EAAD,CAAQnB,KAAK,OAAOoB,MAAM,OAAOC,QAAS,kBA7BtC,SAACpC,GACjBH,GAAQ,GACRE,EAASC,EAAIsD,IA2B+CC,CAAUvD,IAA1D,oBAGA,cAACkC,EAAA,EAAD,CACEE,QAAS,kBAvCLkB,EAuCsBtD,EAAIsD,QAtC5C5D,EAAS,CAAEgC,KAAM,cAAe4B,OADf,IAACA,GAwCJvC,KAAK,OACLoB,MAAM,MAHR,yBAXYiB,GAqBftD,IAAUE,EAAIsD,IACb,cAAC,EAAD,CACExD,MAAOA,EACPE,IAAKA,EACLD,SAAUA,EACVH,KAAMA,EACNC,QAASA,YAMnB,cAAC,IAAD,CAAM2D,GAAG,OAAT,SACE,cAACtB,EAAA,EAAD,CAAQjB,QAAQ,WAAWkB,MAAM,e,QC6D1BsB,EAlIC,WAEd,IAAM/E,EAASC,IAAIC,OAAO,CACxBC,KAAMF,IAAIG,SAASC,WAAWC,IAAI,GAAGC,OACrCC,SAAUP,IAAIG,SAASE,IAAI,GAAGD,WAC9BI,MAAOR,IAAIG,SACRK,MAAM,CAAEuE,kBAAmB,EAAGtE,KAAM,CAAEC,MAAO,CAAC,MAAO,UACrDN,WACHO,QAASX,IAAIC,OAAO,CAClBW,KAAMZ,IAAIG,SAASC,eATH,EAiBhBkB,YAAQ,CAAEC,SAAUC,YAAYzB,KAHlC0B,EAdkB,EAclBA,aACAC,EAfkB,EAelBA,QACaE,EAhBK,EAgBlBE,UAAaF,OAGTb,EAAWC,cACXgE,EAAUC,cAWhB,OACE,8BACE,eAACzC,EAAA,EAAD,CACE0C,SAAUzD,GAZM,SAACkC,GACrB5C,EAAS,CACPgC,KAAM,WACNY,SAEFqB,EAAQG,KAAK,KACbC,QAAQC,IAAI1B,MAOR2B,MAAO,CAAEC,QAAS,QAClBC,aAAa,MAHf,UAKE,eAAChD,EAAA,EAAKC,MAAN,WACE,2CACA,cAAC,IAAD,CACEvC,KAAK,OACLwB,QAASA,EACTgB,OAAQ,oBAAGC,MAASC,EAAZ,EAAYA,SAAUC,EAAtB,EAAsBA,MAAtB,OACN,cAACL,EAAA,EAAKM,MAAN,CACEC,KAAK,OACLF,MAAOA,EACPI,YAAY,cACZL,SAAU,SAACM,GAAD,OAAON,EAASM,EAAEC,OAAON,QACnCO,MACExB,EAAO1B,MAAQ,CACboC,QAASV,EAAO1B,KAAKmD,iBAOjC,eAACb,EAAA,EAAKC,MAAN,WACE,8CACA,cAAC,IAAD,CACEvC,KAAK,WACLwB,QAASA,EACTgB,OAAQ,oBAAGC,MAASC,EAAZ,EAAYA,SAAUC,EAAtB,EAAsBA,MAAtB,OACN,cAACL,EAAA,EAAKM,MAAN,CACEC,KAAK,OACLF,MAAOA,EACP3C,KAAK,WACL+C,YAAY,cACZL,SAAU,SAACM,GAAD,OAAON,EAASM,EAAEC,OAAON,QACnCO,MACExB,EAAOrB,UAAY,CACjB+B,QAASV,EAAOrB,SAAS8C,iBAOrC,eAACb,EAAA,EAAKC,MAAN,WACE,0CACA,cAAC,IAAD,CACEvC,KAAK,QACLwB,QAASA,EACTgB,OAAQ,oBAAGC,MAASC,EAAZ,EAAYA,SAAUC,EAAtB,EAAsBA,MAAtB,OACN,cAACL,EAAA,EAAKM,MAAN,CACEC,KAAK,OACLF,MAAOA,EACPI,YAAY,cACZL,SAAU,SAACM,GAAD,OAAON,EAASM,EAAEC,OAAON,QACnCO,MACExB,EAAOpB,OAAS,CACd8B,QAASV,EAAOpB,MAAM6C,iBAOlC,eAACb,EAAA,EAAKC,MAAN,WACE,yCACA,cAAC,IAAD,CACEvC,KAAK,eACLwB,QAASA,EACTgB,OAAQ,wBAAGC,MAASC,EAAZ,EAAYA,SAAUC,EAAtB,EAAsBA,MAAtB,OACN,cAACL,EAAA,EAAKM,MAAN,CACEC,KAAK,OACLF,MAAOA,EACPI,YAAY,eACZL,SAAU,SAACM,GAAD,OAAON,EAASM,EAAEC,OAAON,QACnCO,OACQ,OAANxB,QAAM,IAANA,GAAA,UAAAA,EAAQjB,eAAR,eAAiBC,OAAQ,CACvB0B,QAAO,OAAEV,QAAF,IAAEA,GAAF,UAAEA,EAAQjB,eAAV,aAAE,EAAiBC,KAAKyC,iBAO3C,cAACE,EAAA,EAAD,CAAQkC,SAAO,EAAC1C,KAAK,SAArB,oBAGA,cAACQ,EAAA,EAAD,CAAQmC,UAAQ,EAACjC,QAAS,kBAAMuB,EAAQG,KAAK,MAA7C,0B,kBC9FOQ,EA5BH,WACV,IAAM5E,EAAWC,cAYjB,OAXAe,qBAAU,YACM,uCAAG,4BAAA6D,EAAA,sEACMC,IAAMC,IACzB,8CAFa,OACTC,EADS,OAIfhF,EAAS,CAAEgC,KAAM,WAAYgD,OAAQA,EAAOpC,OAJ7B,2CAAH,qDAMdqC,KAEA,IAIA,cAAC,IAAD,UACE,eAAC,IAAD,WACE,cAAC,IAAD,CAAOC,KAAK,OAAZ,SACE,cAAC,EAAD,MAEF,cAAC,IAAD,CAAOA,KAAK,IAAZ,SACE,cAAC,EAAD,Y,gCCVKC,EAlBK,WAAyB,IAAxBlC,EAAuB,uDAAf,GAAImC,EAAW,uCAC1C,OAAQA,EAAOpD,MACb,IAAK,WACH,OAAO,YAAIoD,EAAOJ,QACpB,IAAK,cACH,OAAO/B,EAAMoC,QAAO,SAAC/E,GAAD,OAASA,EAAIsD,KAAOwB,EAAOxB,MACjD,IAAK,cACJ,IAAM0B,EAAI,YAAOrC,GAEhB,OADAqC,EAAKC,OAAOH,EAAOhF,MAAQ,EAAG,EAAGgF,EAAOvC,cACjC,YAAIyC,GAEb,IAAK,WACH,MAAM,GAAN,mBAAWrC,GAAX,CAAkBmC,EAAOxC,OAC3B,QACE,OAAOK,ICHTuC,EAAQC,YACVC,EACAC,OAAOC,8BAAgCD,OAAOC,gCAIhDC,IAASlE,OACP,mCACE,eAAC,IAAD,CAAU6D,MAAOA,EAAjB,cAAyB,cAAC,EAAD,IAAzB,SAGFM,SAASC,eAAe,W","file":"static/js/main.b90ee19a.chunk.js","sourcesContent":["import { useForm, Controller } from \"react-hook-form\";\r\nimport { useDispatch } from \"react-redux\";\r\nimport { Button, Header, Icon, Modal, Form } from \"semantic-ui-react\";\r\nimport Joi from \"joi\";\r\nimport { joiResolver } from \"@hookform/resolvers/joi\";\r\nimport { useEffect } from \"react\";\r\n\r\nconst schema = Joi.object({\r\n  name: Joi.string().required().min(3).trim(),\r\n  username: Joi.string().min(3).required(),\r\n  email: Joi.string()\r\n    .email({ tlds: { allow: false } })\r\n    .required(),\r\n  address: Joi.object({\r\n    city: Joi.string().required(),\r\n  }),\r\n});\r\n\r\nconst UpdateModal = (props) => {\r\n  \r\n  const dispatch = useDispatch();\r\n  const { open, setOpen, curId, setCurId, val} = props;\r\n  const {\r\n    handleSubmit,\r\n    control,\r\n    setValue,\r\n    reset,\r\n    formState: { errors },\r\n  } = useForm({ resolver: joiResolver(schema) });\r\n\r\nuseEffect(() => {\r\nsetValue('name',val.name);\r\nsetValue('username',val.username);\r\nsetValue('email',val.email);\r\nsetValue('address.city',val.address.city);\r\n\r\n}, [])\r\n  const submitUpdate = (data) => {\r\n    const {\r\n      name,\r\n      username,\r\n      email,\r\n      address: { city },\r\n    } = data;\r\n    \r\n    const updatedValue = {\r\n      name: name,\r\n      username: username,\r\n      email: email,\r\n      address: { city },\r\n    };\r\n    \r\n    dispatch({ type: \"UPDATE_USER\", updatedValue, curId });\r\n    setCurId(null);\r\n    setOpen(false);\r\n\r\n  };\r\n\r\n  const cancelUpdate = () => {\r\n    setCurId(null);\r\n    setOpen(false);\r\n  };\r\n\r\n  return (\r\n    <Modal\r\n      closeIcon\r\n      onClose={() => setOpen(false)}\r\n      onOpen={() => setOpen(true)}\r\n      open={open}\r\n      size=\"small\"\r\n    >\r\n      <Header content=\"Update User\" />\r\n      <Modal.Content>\r\n        <Form.Field>\r\n          <label> Name </label>\r\n          <Controller\r\n            name=\"name\"\r\n            control={control}\r\n            render={({ field: { onChange, value } }) => (\r\n              <Form.Input\r\n                type=\"text\"\r\n                fluid\r\n                value={value}\r\n                placeholder=\"Type name..\"\r\n                onChange={(e) => onChange(e.target.value)}\r\n                error={\r\n                  errors.name && {\r\n                    content: errors.name.message,\r\n                  }\r\n                }\r\n              />\r\n            )}\r\n          />\r\n        </Form.Field>\r\n      </Modal.Content>\r\n      <Modal.Content>\r\n        <Form.Field>\r\n          <label>User Name</label>\r\n          <Controller\r\n            name=\"username\"\r\n            control={control}\r\n            render={({ field: { onChange, value } }) => (\r\n              <Form.Input\r\n                type=\"text\"\r\n                fluid\r\n                value={value}\r\n                name=\"username\"\r\n                placeholder=\"Type username..\"\r\n                onChange={(e) => onChange(e.target.value)}\r\n                error={\r\n                  errors.username && {\r\n                    content: errors.username.message,\r\n                  }\r\n                }\r\n              />\r\n            )}\r\n          />\r\n        </Form.Field>\r\n      </Modal.Content>\r\n      <Modal.Content>\r\n        <Form.Field>\r\n          <label>Email</label>\r\n          <Controller\r\n            name=\"email\"\r\n            control={control}\r\n            render={({ field: { onChange, value} }) => (\r\n              <Form.Input\r\n                fluid\r\n                type=\"text\"\r\n                value={value}\r\n                placeholder=\"Type email..\"\r\n                onChange={(e) => onChange(e.target.value)}\r\n                error={\r\n                  errors.email && {\r\n                    content: errors.email.message,\r\n                  }\r\n                }\r\n              />\r\n            )}\r\n          />\r\n        </Form.Field>\r\n      </Modal.Content>\r\n      <Modal.Content>\r\n        <Form.Field>\r\n          <label>City</label>\r\n          <Controller\r\n            name=\"address.city\"\r\n            control={control}\r\n            render={({ field: { onChange, value } }) => (\r\n              <Form.Input\r\n                type=\"text\"\r\n                fluid\r\n                value={value}\r\n                placeholder=\"enter city..\"\r\n                onChange={(e) => onChange(e.target.value)}\r\n                error={\r\n                  errors?.address?.city && {\r\n                    content: errors?.address?.city.message,\r\n                  }\r\n                }\r\n              />\r\n            )}\r\n          />\r\n        </Form.Field>\r\n      </Modal.Content>\r\n      <Modal.Actions>\r\n        <Button color=\"red\" onClick={cancelUpdate}>\r\n          <Icon name=\"remove\" /> Cancel\r\n        </Button>\r\n        <Button color=\"green\" onClick={handleSubmit(submitUpdate)}>\r\n          <Icon name=\"checkmark\" /> Update\r\n        </Button>\r\n      </Modal.Actions>\r\n    </Modal>\r\n  );\r\n};\r\n\r\nexport default UpdateModal;\r\n","import React, { useState } from \"react\";\r\nimport { useSelector, useDispatch } from \"react-redux\";\r\nimport { Button, Table } from \"semantic-ui-react\";\r\nimport { Link } from \"react-router-dom\";\r\nimport UpdateModal from \"./UpdateModal\";\r\n\r\nconst UsersDetail = () => {\r\n  const dispatch = useDispatch();\r\n  const users = useSelector((state) => state);\r\n  const [open, setOpen] = useState(false);\r\n  const [curId, setCurId] = useState(null);\r\n\r\n\r\n  // ----------------  Delete User -------------------------->\r\n\r\n  const deleteUser = (id) => {\r\n    dispatch({ type: \"DELETE_USER\", id });\r\n  };\r\n\r\n  // ----------------  Show Input Modal -------------------------->\r\n\r\n  const showModal = (val) => {\r\n    setOpen(true);\r\n    setCurId(val.id);\r\n  };\r\n\r\n  return (\r\n    <Table padded striped>\r\n      <Table.Header>\r\n        <Table.Row>\r\n          <Table.HeaderCell>Id</Table.HeaderCell>\r\n          <Table.HeaderCell>Name</Table.HeaderCell>\r\n          <Table.HeaderCell>User Name</Table.HeaderCell>\r\n          <Table.HeaderCell>E-mail</Table.HeaderCell>\r\n          <Table.HeaderCell>City</Table.HeaderCell>\r\n          <Table.HeaderCell>Action</Table.HeaderCell>\r\n        </Table.Row>\r\n      </Table.Header>\r\n\r\n      <Table.Body>\r\n        {users.map((val, index) => (\r\n          <>\r\n            <Table.Row key={index}>\r\n              <Table.Cell>{(val.id = index + 1)}</Table.Cell>\r\n              <Table.Cell>{val.name}</Table.Cell>\r\n              <Table.Cell>{val.username}</Table.Cell>\r\n              <Table.Cell>{val.email}</Table.Cell>\r\n              <Table.Cell>{val.address.city}</Table.Cell>\r\n              <Table.Cell>\r\n                {\" \"}\r\n                <Button size=\"tiny\" color=\"blue\" onClick={() => showModal(val)}>\r\n                  Update\r\n                </Button>\r\n                <Button\r\n                  onClick={() => deleteUser(val.id)}\r\n                  size=\"tiny\"\r\n                  color=\"red\"\r\n                >\r\n                  Delete\r\n                </Button>\r\n              </Table.Cell>\r\n            </Table.Row>\r\n\r\n            {curId === val.id && (\r\n              <UpdateModal\r\n                curId={curId}\r\n                val={val}\r\n                setCurId={setCurId}\r\n                open={open}\r\n                setOpen={setOpen}\r\n              />\r\n            )}\r\n          </>\r\n        ))}\r\n      </Table.Body>\r\n      <Link to=\"/add\">\r\n        <Button content=\"Add User\" color=\"pink\"></Button>\r\n      </Link>\r\n    </Table>\r\n  );\r\n};\r\n\r\nexport default UsersDetail;\r\n","import { useDispatch } from \"react-redux\";\r\nimport { useHistory } from \"react-router\";\r\nimport { Button, Form } from \"semantic-ui-react\";\r\nimport { useForm, Controller } from \"react-hook-form\";\r\nimport Joi from \"joi\";\r\nimport { joiResolver } from \"@hookform/resolvers/joi\";\r\n\r\nconst AddUser = () => {\r\n  \r\n  const schema = Joi.object({\r\n    name: Joi.string().required().min(3).trim(),\r\n    username: Joi.string().min(3).required(),\r\n    email: Joi.string()\r\n      .email({ minDomainSegments: 2, tlds: { allow: [\"com\", \"net\"] } })\r\n      .required(),\r\n    address: Joi.object({\r\n      city: Joi.string().required(),\r\n    }),\r\n  });\r\n\r\n  const {\r\n    handleSubmit,\r\n    control,\r\n    formState: { errors },\r\n  } = useForm({ resolver: joiResolver(schema) });\r\n\r\n  const dispatch = useDispatch();\r\n  const history = useHistory();\r\n\r\n  const submitNewUser = (data) => {\r\n    dispatch({\r\n      type: \"ADD_USER\",\r\n      data,\r\n    });\r\n    history.push(\"/\");\r\n    console.log(data);\r\n  };\r\n\r\n  return (\r\n    <div>\r\n      <Form\r\n        onSubmit={handleSubmit(submitNewUser)}\r\n        style={{ padding: \"80px\" }}\r\n        autoComplete=\"off\"\r\n      >\r\n        <Form.Field>\r\n          <label> Name </label>\r\n          <Controller\r\n            name=\"name\"\r\n            control={control}\r\n            render={({ field: { onChange, value } }) => (\r\n              <Form.Input\r\n                type=\"text\"\r\n                value={value}\r\n                placeholder=\"Type name..\"\r\n                onChange={(e) => onChange(e.target.value)}\r\n                error={\r\n                  errors.name && {\r\n                    content: errors.name.message,\r\n                  }\r\n                }\r\n              />\r\n            )}\r\n          />\r\n        </Form.Field>\r\n        <Form.Field>\r\n          <label>User Name</label>\r\n          <Controller\r\n            name=\"username\"\r\n            control={control}\r\n            render={({ field: { onChange, value } }) => (\r\n              <Form.Input\r\n                type=\"text\"\r\n                value={value}\r\n                name=\"username\"\r\n                placeholder=\"Type name..\"\r\n                onChange={(e) => onChange(e.target.value)}\r\n                error={\r\n                  errors.username && {\r\n                    content: errors.username.message,\r\n                  }\r\n                }\r\n              />\r\n            )}\r\n          />\r\n        </Form.Field>\r\n        <Form.Field>\r\n          <label>Email</label>\r\n          <Controller\r\n            name=\"email\"\r\n            control={control}\r\n            render={({ field: { onChange, value } }) => (\r\n              <Form.Input\r\n                type=\"text\"\r\n                value={value}\r\n                placeholder=\"Type name..\"\r\n                onChange={(e) => onChange(e.target.value)}\r\n                error={\r\n                  errors.email && {\r\n                    content: errors.email.message,\r\n                  }\r\n                }\r\n              />\r\n            )}\r\n          />\r\n        </Form.Field>\r\n        <Form.Field>\r\n          <label>City</label>\r\n          <Controller\r\n            name=\"address.city\"\r\n            control={control}\r\n            render={({ field: { onChange, value } }) => (\r\n              <Form.Input\r\n                type=\"text\"\r\n                value={value}\r\n                placeholder=\"enter city..\"\r\n                onChange={(e) => onChange(e.target.value)}\r\n                error={\r\n                  errors?.address?.city && {\r\n                    content: errors?.address?.city.message,\r\n                  }\r\n                }\r\n              />\r\n            )}\r\n          />\r\n        </Form.Field>\r\n        <Button primary type=\"submit\">\r\n          Submit\r\n        </Button>\r\n        <Button negative onClick={() => history.push(\"/\")}>\r\n          Cancel\r\n        </Button>\r\n      </Form>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default AddUser;\r\n","import UsersDetail from \"./UsersDetail\";\nimport { Route, Switch, BrowserRouter as Router } from \"react-router-dom\";\nimport AddUser from \"./AddUser\";\nimport { useEffect } from \"react\";\nimport axios from \"axios\";\nimport { useDispatch } from \"react-redux\";\n\nconst App = () => {\n  const dispatch = useDispatch();\n  useEffect(() => {\n    const loadUser = async () => {\n      const result = await axios.get(\n        \"https://jsonplaceholder.typicode.com/users\"\n      );\n      dispatch({ type: \"GET_USER\", result: result.data });\n    };\n    loadUser();\n  // eslint-disable-next-line react-hooks/exhaustive-deps\n  },[]);\n\n  return (\n   \n    <Router>\n      <Switch>\n        <Route path=\"/add\">\n          <AddUser />\n        </Route>\n        <Route path=\"/\">\n          <UsersDetail/>\n        </Route>\n      </Switch>\n    </Router>\n  );\n};\n\nexport default App;\n","const userReducer = (state = [], action) => {\r\n  switch (action.type) {\r\n    case \"GET_USER\":\r\n      return [...action.result];\r\n    case \"DELETE_USER\":\r\n      return state.filter((val) => val.id !== action.id);\r\n    case \"UPDATE_USER\": {\r\n     const temp = [...state];\r\n      temp.splice(action.curId - 1, 1, action.updatedValue);\r\n      return [...temp];\r\n    }\r\n    case \"ADD_USER\":\r\n      return [...state, action.data];\r\n    default:\r\n      return state;\r\n  }\r\n};\r\n\r\nexport default userReducer;\r\n","import ReactDOM from \"react-dom\";\nimport \"./index.css\";\nimport App from \"./JsonApi/App\";\n// import PokeApp from './PokeApi/PokeApp'\nimport './PokeApi/poke.css'\nimport \"semantic-ui-css/semantic.min.css\";\n// import pokestore from './PokeApi/pokestrore'\nimport { createStore } from \"redux\";\nimport userReducers from \"./JsonApi/reducers/userReducer\";\nimport { Provider } from \"react-redux\";\n\nlet store = createStore(\n  userReducers,\n  window.__REDUX_DEVTOOLS_EXTENSION__ && window.__REDUX_DEVTOOLS_EXTENSION__()\n);\n\n\nReactDOM.render(\n  <>\n    <Provider store={store}> <App /> </Provider>\n   {/* <Provider store={pokestore}> <PokeApp /> </Provider> */}\n  </>,\n  document.getElementById(\"root\")\n);\n"],"sourceRoot":""}